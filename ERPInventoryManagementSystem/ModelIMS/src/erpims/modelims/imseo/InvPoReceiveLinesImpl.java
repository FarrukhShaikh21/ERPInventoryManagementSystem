package erpims.modelims.imseo;

import erpadm.modeladm.admeo.AdminCompanyImpl;

import erpfms.modelfms.fmseo.GlProjectsImpl;

import erpglobals.modelglobals.ERPEntityImpl;

import erpglobals.modelglobals.ERPGlobalPLSQLClass;

import java.math.BigDecimal;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Aug 20 16:02:24 PKT 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvPoReceiveLinesImpl extends ERPEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PoReceiveLinesSno,
        PoReceiveHeaderSno,
        PoLinesSno,
        DemandLinesSno,
        CompareSupplierSno,
        RfqLinesSno,
        BidLinesSno,
        LineNo,
        ItemId,
        UnitTypeSno,
        ReceivedQuantity,
        RejectedQuantity,
        NetReceived,
        DepartmentId,
        ProjectId,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        ItemRemarks,
        SubinventoryOrgSno,
        ReceiveMethodSno,
        ExceedQuantity,
        PoQuantity,
        txtItemName,
        txtUnitTypeName,
        txtProjectName,
        txtDepartmentName,
        txtSubinventoryDescription,
        txtNetReceived,
        txtPoQuantity,
        InvPoReceiveHeader,
        InvItem,
        InvUnitType,
        GlProjects,
        AdminCompany,
        InvSubinventoryOrg,
        ScmPurchaseOrderLines;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PORECEIVELINESSNO = AttributesEnum.PoReceiveLinesSno.index();
    public static final int PORECEIVEHEADERSNO = AttributesEnum.PoReceiveHeaderSno.index();
    public static final int POLINESSNO = AttributesEnum.PoLinesSno.index();
    public static final int DEMANDLINESSNO = AttributesEnum.DemandLinesSno.index();
    public static final int COMPARESUPPLIERSNO = AttributesEnum.CompareSupplierSno.index();
    public static final int RFQLINESSNO = AttributesEnum.RfqLinesSno.index();
    public static final int BIDLINESSNO = AttributesEnum.BidLinesSno.index();
    public static final int LINENO = AttributesEnum.LineNo.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int UNITTYPESNO = AttributesEnum.UnitTypeSno.index();
    public static final int RECEIVEDQUANTITY = AttributesEnum.ReceivedQuantity.index();
    public static final int REJECTEDQUANTITY = AttributesEnum.RejectedQuantity.index();
    public static final int NETRECEIVED = AttributesEnum.NetReceived.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ITEMREMARKS = AttributesEnum.ItemRemarks.index();
    public static final int SUBINVENTORYORGSNO = AttributesEnum.SubinventoryOrgSno.index();
    public static final int RECEIVEMETHODSNO = AttributesEnum.ReceiveMethodSno.index();
    public static final int EXCEEDQUANTITY = AttributesEnum.ExceedQuantity.index();
    public static final int POQUANTITY = AttributesEnum.PoQuantity.index();
    public static final int TXTITEMNAME = AttributesEnum.txtItemName.index();
    public static final int TXTUNITTYPENAME = AttributesEnum.txtUnitTypeName.index();
    public static final int TXTPROJECTNAME = AttributesEnum.txtProjectName.index();
    public static final int TXTDEPARTMENTNAME = AttributesEnum.txtDepartmentName.index();
    public static final int TXTSUBINVENTORYDESCRIPTION = AttributesEnum.txtSubinventoryDescription.index();
    public static final int TXTNETRECEIVED = AttributesEnum.txtNetReceived.index();
    public static final int TXTPOQUANTITY = AttributesEnum.txtPoQuantity.index();
    public static final int INVPORECEIVEHEADER = AttributesEnum.InvPoReceiveHeader.index();
    public static final int INVITEM = AttributesEnum.InvItem.index();
    public static final int INVUNITTYPE = AttributesEnum.InvUnitType.index();
    public static final int GLPROJECTS = AttributesEnum.GlProjects.index();
    public static final int ADMINCOMPANY = AttributesEnum.AdminCompany.index();
    public static final int INVSUBINVENTORYORG = AttributesEnum.InvSubinventoryOrg.index();
    public static final int SCMPURCHASEORDERLINES = AttributesEnum.ScmPurchaseOrderLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvPoReceiveLinesImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpims.modelims.imseo.InvPoReceiveLines");
    }


    /**
     * Gets the attribute value for PoReceiveLinesSno, using the alias name PoReceiveLinesSno.
     * @return the value of PoReceiveLinesSno
     */
    public Integer getPoReceiveLinesSno() {
        return (Integer) getAttributeInternal(PORECEIVELINESSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoReceiveLinesSno.
     * @param value value to set the PoReceiveLinesSno
     */
    public void setPoReceiveLinesSno(Integer value) {
        setAttributeInternal(PORECEIVELINESSNO, value);
    }

    /**
     * Gets the attribute value for PoReceiveHeaderSno, using the alias name PoReceiveHeaderSno.
     * @return the value of PoReceiveHeaderSno
     */
    public Integer getPoReceiveHeaderSno() {
        return (Integer) getAttributeInternal(PORECEIVEHEADERSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoReceiveHeaderSno.
     * @param value value to set the PoReceiveHeaderSno
     */
    public void setPoReceiveHeaderSno(Integer value) {
        setAttributeInternal(PORECEIVEHEADERSNO, value);
    }

    /**
     * Gets the attribute value for PoLinesSno, using the alias name PoLinesSno.
     * @return the value of PoLinesSno
     */
    public Integer getPoLinesSno() {
        return (Integer) getAttributeInternal(POLINESSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoLinesSno.
     * @param value value to set the PoLinesSno
     */
    public void setPoLinesSno(Integer value) {
        setAttributeInternal(POLINESSNO, value);
    }

    /**
     * Gets the attribute value for DemandLinesSno, using the alias name DemandLinesSno.
     * @return the value of DemandLinesSno
     */
    public Integer getDemandLinesSno() {
        return (Integer) getAttributeInternal(DEMANDLINESSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DemandLinesSno.
     * @param value value to set the DemandLinesSno
     */
    public void setDemandLinesSno(Integer value) {
        setAttributeInternal(DEMANDLINESSNO, value);
    }

    /**
     * Gets the attribute value for CompareSupplierSno, using the alias name CompareSupplierSno.
     * @return the value of CompareSupplierSno
     */
    public Integer getCompareSupplierSno() {
        return (Integer) getAttributeInternal(COMPARESUPPLIERSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompareSupplierSno.
     * @param value value to set the CompareSupplierSno
     */
    public void setCompareSupplierSno(Integer value) {
        setAttributeInternal(COMPARESUPPLIERSNO, value);
    }

    /**
     * Gets the attribute value for RfqLinesSno, using the alias name RfqLinesSno.
     * @return the value of RfqLinesSno
     */
    public Integer getRfqLinesSno() {
        return (Integer) getAttributeInternal(RFQLINESSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfqLinesSno.
     * @param value value to set the RfqLinesSno
     */
    public void setRfqLinesSno(Integer value) {
        setAttributeInternal(RFQLINESSNO, value);
    }

    /**
     * Gets the attribute value for BidLinesSno, using the alias name BidLinesSno.
     * @return the value of BidLinesSno
     */
    public Integer getBidLinesSno() {
        return (Integer) getAttributeInternal(BIDLINESSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BidLinesSno.
     * @param value value to set the BidLinesSno
     */
    public void setBidLinesSno(Integer value) {
        setAttributeInternal(BIDLINESSNO, value);
    }

    /**
     * Gets the attribute value for LineNo, using the alias name LineNo.
     * @return the value of LineNo
     */
    public Integer getLineNo() {
        return (Integer) getAttributeInternal(LINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineNo.
     * @param value value to set the LineNo
     */
    public void setLineNo(Integer value) {
        setAttributeInternal(LINENO, value);
    }

    /**
     * Gets the attribute value for ItemId, using the alias name ItemId.
     * @return the value of ItemId
     */
    public Integer getItemId() {
        return (Integer) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemId.
     * @param value value to set the ItemId
     */
    public void setItemId(Integer value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for UnitTypeSno, using the alias name UnitTypeSno.
     * @return the value of UnitTypeSno
     */
    public Integer getUnitTypeSno() {
        return (Integer) getAttributeInternal(UNITTYPESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitTypeSno.
     * @param value value to set the UnitTypeSno
     */
    public void setUnitTypeSno(Integer value) {
        setAttributeInternal(UNITTYPESNO, value);
    }

    /**
     * Gets the attribute value for ReceivedQuantity, using the alias name ReceivedQuantity.
     * @return the value of ReceivedQuantity
     */
    public BigDecimal getReceivedQuantity() {
        return (BigDecimal) getAttributeInternal(RECEIVEDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceivedQuantity.
     * @param value value to set the ReceivedQuantity
     */
    public void setReceivedQuantity(BigDecimal value) {
        setAttributeInternal(RECEIVEDQUANTITY, value);
    }

    /**
     * Gets the attribute value for RejectedQuantity, using the alias name RejectedQuantity.
     * @return the value of RejectedQuantity
     */
    public BigDecimal getRejectedQuantity() {
        return (BigDecimal) getAttributeInternal(REJECTEDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejectedQuantity.
     * @param value value to set the RejectedQuantity
     */
    public void setRejectedQuantity(BigDecimal value) {
        setAttributeInternal(REJECTEDQUANTITY, value);
    }

    /**
     * Gets the attribute value for NetReceived, using the alias name NetReceived.
     * @return the value of NetReceived
     */
    public Integer getNetReceived() {
        return (Integer) getAttributeInternal(NETRECEIVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for NetReceived.
     * @param value value to set the NetReceived
     */
    public void setNetReceived(Integer value) {
        setAttributeInternal(NETRECEIVED, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the value of DepartmentId
     */
    public Integer getDepartmentId() {
        return (Integer) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(Integer value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the value of ProjectId
     */
    public Integer getProjectId() {
        return (Integer) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(Integer value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ItemRemarks, using the alias name ItemRemarks.
     * @return the value of ItemRemarks
     */
    public String getItemRemarks() {
        return (String) getAttributeInternal(ITEMREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemRemarks.
     * @param value value to set the ItemRemarks
     */
    public void setItemRemarks(String value) {
        setAttributeInternal(ITEMREMARKS, value);
    }

    /**
     * Gets the attribute value for SubinventoryOrgSno, using the alias name SubinventoryOrgSno.
     * @return the value of SubinventoryOrgSno
     */
    public Integer getSubinventoryOrgSno() {
        return (Integer) getAttributeInternal(SUBINVENTORYORGSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubinventoryOrgSno.
     * @param value value to set the SubinventoryOrgSno
     */
    public void setSubinventoryOrgSno(Integer value) {
        setAttributeInternal(SUBINVENTORYORGSNO, value);
    }

    /**
     * Gets the attribute value for ReceiveMethodSno, using the alias name ReceiveMethodSno.
     * @return the value of ReceiveMethodSno
     */
    public String getReceiveMethodSno() {
        return (String) getAttributeInternal(RECEIVEMETHODSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiveMethodSno.
     * @param value value to set the ReceiveMethodSno
     */
    public void setReceiveMethodSno(String value) {
        setAttributeInternal(RECEIVEMETHODSNO, value);
    }

    /**
     * Gets the attribute value for ExceedQuantity, using the alias name ExceedQuantity.
     * @return the value of ExceedQuantity
     */
    public BigDecimal getExceedQuantity() {
        return (BigDecimal) getAttributeInternal(EXCEEDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExceedQuantity.
     * @param value value to set the ExceedQuantity
     */
    public void setExceedQuantity(BigDecimal value) {
        setAttributeInternal(EXCEEDQUANTITY, value);
    }

    /**
     * Gets the attribute value for PoQuantity, using the alias name PoQuantity.
     * @return the value of PoQuantity
     */
    public BigDecimal getPoQuantity() {
        return (BigDecimal) getAttributeInternal(POQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoQuantity.
     * @param value value to set the PoQuantity
     */
    public void setPoQuantity(BigDecimal value) {
        setAttributeInternal(POQUANTITY, value);
    }

    /**
     * Gets the attribute value for txtItemName, using the alias name txtItemName.
     * @return the value of txtItemName
     */
    public String gettxtItemName() {
        return (String) getAttributeInternal(TXTITEMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtItemName.
     * @param value value to set the txtItemName
     */
    public void settxtItemName(String value) {
        setAttributeInternal(TXTITEMNAME, value);
    }

    /**
     * Gets the attribute value for txtUnitTypeName, using the alias name txtUnitTypeName.
     * @return the value of txtUnitTypeName
     */
    public String gettxtUnitTypeName() {
        return (String) getAttributeInternal(TXTUNITTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtUnitTypeName.
     * @param value value to set the txtUnitTypeName
     */
    public void settxtUnitTypeName(String value) {
        setAttributeInternal(TXTUNITTYPENAME, value);
    }

    /**
     * Gets the attribute value for txtProjectName, using the alias name txtProjectName.
     * @return the value of txtProjectName
     */
    public String gettxtProjectName() {
        return (String) getAttributeInternal(TXTPROJECTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtProjectName.
     * @param value value to set the txtProjectName
     */
    public void settxtProjectName(String value) {
        setAttributeInternal(TXTPROJECTNAME, value);
    }

    /**
     * Gets the attribute value for txtDepartmentName, using the alias name txtDepartmentName.
     * @return the value of txtDepartmentName
     */
    public String gettxtDepartmentName() {
        return (String) getAttributeInternal(TXTDEPARTMENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtDepartmentName.
     * @param value value to set the txtDepartmentName
     */
    public void settxtDepartmentName(String value) {
        setAttributeInternal(TXTDEPARTMENTNAME, value);
    }

    /**
     * Gets the attribute value for txtSubinventoryDescription, using the alias name txtSubinventoryDescription.
     * @return the value of txtSubinventoryDescription
     */
    public String gettxtSubinventoryDescription() {
        return (String) getAttributeInternal(TXTSUBINVENTORYDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtSubinventoryDescription.
     * @param value value to set the txtSubinventoryDescription
     */
    public void settxtSubinventoryDescription(String value) {
        setAttributeInternal(TXTSUBINVENTORYDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for txtNetReceived, using the alias name txtNetReceived.
     * @return the value of txtNetReceived
     */
    public BigDecimal gettxtNetReceived() {
        return (BigDecimal) getAttributeInternal(TXTNETRECEIVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtNetReceived.
     * @param value value to set the txtNetReceived
     */
    public void settxtNetReceived(BigDecimal value) {
        setAttributeInternal(TXTNETRECEIVED, value);
    }

    /**
     * Gets the attribute value for txtPoQuantity, using the alias name txtPoQuantity.
     * @return the value of txtPoQuantity
     */
    public BigDecimal gettxtPoQuantity() {
        return (BigDecimal) getAttributeInternal(TXTPOQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtPoQuantity.
     * @param value value to set the txtPoQuantity
     */
    public void settxtPoQuantity(BigDecimal value) {
        setAttributeInternal(TXTPOQUANTITY, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public InvPoReceiveHeaderImpl getInvPoReceiveHeader() {
        return (InvPoReceiveHeaderImpl) getAttributeInternal(INVPORECEIVEHEADER);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setInvPoReceiveHeader(InvPoReceiveHeaderImpl value) {
        setAttributeInternal(INVPORECEIVEHEADER, value);
    }

    /**
     * @return the associated entity InvItemImpl.
     */
    public InvItemImpl getInvItem() {
        return (InvItemImpl) getAttributeInternal(INVITEM);
    }

    /**
     * Sets <code>value</code> as the associated entity InvItemImpl.
     */
    public void setInvItem(InvItemImpl value) {
        setAttributeInternal(INVITEM, value);
    }

    /**
     * @return the associated entity InvUnitTypeImpl.
     */
    public InvUnitTypeImpl getInvUnitType() {
        return (InvUnitTypeImpl) getAttributeInternal(INVUNITTYPE);
    }

    /**
     * Sets <code>value</code> as the associated entity InvUnitTypeImpl.
     */
    public void setInvUnitType(InvUnitTypeImpl value) {
        setAttributeInternal(INVUNITTYPE, value);
    }

    /**
     * @return the associated entity erpfms.modelfms.fmseo.GlProjectsImpl.
     */
    public GlProjectsImpl getGlProjects() {
        return (GlProjectsImpl) getAttributeInternal(GLPROJECTS);
    }

    /**
     * Sets <code>value</code> as the associated entity erpfms.modelfms.fmseo.GlProjectsImpl.
     */
    public void setGlProjects(GlProjectsImpl value) {
        setAttributeInternal(GLPROJECTS, value);
    }

    /**
     * @return the associated entity erpadm.modeladm.admeo.AdminCompanyImpl.
     */
    public AdminCompanyImpl getAdminCompany() {
        return (AdminCompanyImpl) getAttributeInternal(ADMINCOMPANY);
    }

    /**
     * Sets <code>value</code> as the associated entity erpadm.modeladm.admeo.AdminCompanyImpl.
     */
    public void setAdminCompany(AdminCompanyImpl value) {
        setAttributeInternal(ADMINCOMPANY, value);
    }

    /**
     * @return the associated entity InvSubinventoryOrgImpl.
     */
    public InvSubinventoryOrgImpl getInvSubinventoryOrg() {
        return (InvSubinventoryOrgImpl) getAttributeInternal(INVSUBINVENTORYORG);
    }

    /**
     * Sets <code>value</code> as the associated entity InvSubinventoryOrgImpl.
     */
    public void setInvSubinventoryOrg(InvSubinventoryOrgImpl value) {
        setAttributeInternal(INVSUBINVENTORYORG, value);
    }

    /**
     * @return the associated entity erpglobals.modelglobals.ERPEntityImpl.
     */
    public ERPEntityImpl getScmPurchaseOrderLines() {
        return (ERPEntityImpl) getAttributeInternal(SCMPURCHASEORDERLINES);
    }

    /**
     * Sets <code>value</code> as the associated entity erpglobals.modelglobals.ERPEntityImpl.
     */
    public void setScmPurchaseOrderLines(ERPEntityImpl value) {
        setAttributeInternal(SCMPURCHASEORDERLINES, value);
    }


    /**
     * @param poReceiveLinesSno key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer poReceiveLinesSno) {
        return new Key(new Object[] { poReceiveLinesSno });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if (operation!=DML_DELETE) {
        populateAttributeAsChanged(NETRECEIVED, gettxtNetReceived());
        populateAttributeAsChanged(POQUANTITY, gettxtPoQuantity());
       }
        if (operation!=DML_DELETE && 2==1) {
                

                      if (getPoLinesSno() != null) {
                          
//                          doCheckBalanceQuantity("RFQ_LINES_SNO", "RfqLinesSno", "RFQ", getScmPurchaseRfqLines().getQuantity());
//                          doCheckBalanceQuantity("PO_LINES_SNO", "PoLinesSno", "PO", getScmPurchaseRfqLines().getQuantity());
                      }
                      if (getBidLinesSno() != null) {
//                          doCheckBalanceQuantity("BID_LINES_SNO", "BidLinesSno", "BID", getScmPurchaseBidLines().getQuantity());
                      }

                      if (getCompareSupplierSno() != null) {
//                          doCheckBalanceQuantity("COMPARE_SUPPLIER_SNO", "CompareSupplierSno", "Compare",
//                                                 getScmPurchaseBidCompSupplier().getQuantity());
                      }
                      if (getDemandLinesSno() != null) {
//                          doCheckBalanceQuantity("DEMAND_LINES_SNO", "DemandLinesSno", "Demand",
//                                                 getScmPurchaseDemandLines().getApproveQuantity());
                      }
                 
              }


        super.doDML(operation, e);


                   if (getPoLinesSno() != null) {
                       doUpdateSourceBalance("SCM_PURCHASE_ORDER_LINES", "PO_LINES_SNO", "PoLinesSno",
                                             "PO_APPROVE_QUANTITY");
               }
        
    }
    
    public void doUpdateSourceBalance(String pTableName,String pDBColumn,String pGetter,String ERPQuantityColumn) {
        PreparedStatement ps=null;
        try {
             ps =
                getDBTransaction().createPreparedStatement("update "+pTableName+" rfl set rfl.is_complete=case when (select coalesce(sum(po_quantity),0)-coalesce(sum(rejected_quantity),0) from inv_po_receive_lines where "+pDBColumn+"=" +getAttribute(pGetter) +")=rfl."+ERPQuantityColumn+" then 'Y' else 'N' end ,rfl.remaining_balance=rfl."+ERPQuantityColumn+"-(select coalesce(sum(po_quantity),0)-coalesce(sum(rejected_quantity),0) from inv_po_receive_lines where "+pDBColumn+"=" +getAttribute(pGetter) + ") where rfl."+pDBColumn+"="+getAttribute(pGetter), getDBTransaction().DEFAULT);
            ps.executeUpdate();
        } catch (SQLException sqle) {
            // TODO: Add catch code
            throw new JboException(sqle.getMessage());
        }
        finally{
            try {
                ps.close();
            } catch (SQLException f) {
            }
        }
    }
    public void doCheckBalanceQuantity(String pERPDBColumn, String pERPGetter,String pType,BigDecimal pERPSourceQuantity) {
            String poquantity="0";
           PreparedStatement ps=null;
            try {
                String erpconntype=ERPGlobalPLSQLClass.doErpGetConnTypeModel(getDBTransaction());
                if (!erpconntype.equals("ERPORACLE")) {
                ps = getDBTransaction().createPreparedStatement("start TRANSACTION", getDBTransaction().DEFAULT);
                ps.executeUpdate();
            }
                ps= getDBTransaction().createPreparedStatement("select coalesce(sum(po_approve_quantity),0) PoQuantity from scm_purchase_order_lines where po_lines_sno!="+getPoLinesSno()+" and "+pERPDBColumn+"="+getAttribute(pERPGetter), getDBTransaction().DEFAULT);
                ResultSet rs = ps.executeQuery();
                rs.next();
                poquantity=rs.getString(1);
                
            } catch (SQLException e) {
                e.printStackTrace();
            }
            finally{
                try {
                    ps.close();
                } catch (SQLException e) {
                }
            }
            BigDecimal rfqRemainingQty=pERPSourceQuantity.subtract(new BigDecimal(poquantity));
//           if (rfqRemainingQty.compareTo(getPoRequestQuantity())==-1) {
//            throw new  JboException("Only ("+rfqRemainingQty+") "+pType+" remaining. Item ("+gettxtItemName()+","+gettxtInventoryOrgName()+") Before Insert Exception");
//           }
    }
    
    
}

