package erpims.modelims.imseo;

import erpglobals.modelglobals.ERPEntityImpl;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 27 15:03:05 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvSubinventoryOrgImpl extends ERPEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SubinventoryOrgSno,
        SubinventoryOrgCode,
        SubinventoryOrgShortName,
        SubinventoryTypeSno,
        OpenDate,
        StartDate,
        EndDate,
        InventoryOrgSno,
        PhoneNo,
        FaxNo,
        MobileNo,
        ContactPerson,
        Address,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        IsSupervised,
        SupervisedDate,
        IsUnsupervised,
        UnSupervisedDate,
        SupervisedBy,
        UnSupervisedBy,
        SubinventoryDescription,
        IsActive,
        InvInventoryOrg;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SUBINVENTORYORGSNO = AttributesEnum.SubinventoryOrgSno.index();
    public static final int SUBINVENTORYORGCODE = AttributesEnum.SubinventoryOrgCode.index();
    public static final int SUBINVENTORYORGSHORTNAME = AttributesEnum.SubinventoryOrgShortName.index();
    public static final int SUBINVENTORYTYPESNO = AttributesEnum.SubinventoryTypeSno.index();
    public static final int OPENDATE = AttributesEnum.OpenDate.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int INVENTORYORGSNO = AttributesEnum.InventoryOrgSno.index();
    public static final int PHONENO = AttributesEnum.PhoneNo.index();
    public static final int FAXNO = AttributesEnum.FaxNo.index();
    public static final int MOBILENO = AttributesEnum.MobileNo.index();
    public static final int CONTACTPERSON = AttributesEnum.ContactPerson.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ISSUPERVISED = AttributesEnum.IsSupervised.index();
    public static final int SUPERVISEDDATE = AttributesEnum.SupervisedDate.index();
    public static final int ISUNSUPERVISED = AttributesEnum.IsUnsupervised.index();
    public static final int UNSUPERVISEDDATE = AttributesEnum.UnSupervisedDate.index();
    public static final int SUPERVISEDBY = AttributesEnum.SupervisedBy.index();
    public static final int UNSUPERVISEDBY = AttributesEnum.UnSupervisedBy.index();
    public static final int SUBINVENTORYDESCRIPTION = AttributesEnum.SubinventoryDescription.index();
    public static final int ISACTIVE = AttributesEnum.IsActive.index();
    public static final int INVINVENTORYORG = AttributesEnum.InvInventoryOrg.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvSubinventoryOrgImpl() {
    }

    /**
     * Gets the attribute value for SubinventoryOrgSno, using the alias name SubinventoryOrgSno.
     * @return the value of SubinventoryOrgSno
     */
    public Integer getSubinventoryOrgSno() {
        return (Integer) getAttributeInternal(SUBINVENTORYORGSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubinventoryOrgSno.
     * @param value value to set the SubinventoryOrgSno
     */
    public void setSubinventoryOrgSno(Integer value) {
        setAttributeInternal(SUBINVENTORYORGSNO, value);
    }

    /**
     * Gets the attribute value for SubinventoryOrgCode, using the alias name SubinventoryOrgCode.
     * @return the value of SubinventoryOrgCode
     */
    public Integer getSubinventoryOrgCode() {
        return (Integer) getAttributeInternal(SUBINVENTORYORGCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubinventoryOrgCode.
     * @param value value to set the SubinventoryOrgCode
     */
    public void setSubinventoryOrgCode(Integer value) {
        setAttributeInternal(SUBINVENTORYORGCODE, value);
    }

    /**
     * Gets the attribute value for SubinventoryOrgShortName, using the alias name SubinventoryOrgShortName.
     * @return the value of SubinventoryOrgShortName
     */
    public String getSubinventoryOrgShortName() {
        return (String) getAttributeInternal(SUBINVENTORYORGSHORTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubinventoryOrgShortName.
     * @param value value to set the SubinventoryOrgShortName
     */
    public void setSubinventoryOrgShortName(String value) {
        setAttributeInternal(SUBINVENTORYORGSHORTNAME, value);
    }

    /**
     * Gets the attribute value for SubinventoryTypeSno, using the alias name SubinventoryTypeSno.
     * @return the value of SubinventoryTypeSno
     */
    public String getSubinventoryTypeSno() {
        return (String) getAttributeInternal(SUBINVENTORYTYPESNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubinventoryTypeSno.
     * @param value value to set the SubinventoryTypeSno
     */
    public void setSubinventoryTypeSno(String value) {
        setAttributeInternal(SUBINVENTORYTYPESNO, value);
    }

    /**
     * Gets the attribute value for OpenDate, using the alias name OpenDate.
     * @return the value of OpenDate
     */
    public Date getOpenDate() {
        return (Date) getAttributeInternal(OPENDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpenDate.
     * @param value value to set the OpenDate
     */
    public void setOpenDate(Date value) {
        setAttributeInternal(OPENDATE, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the value of EndDate
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for InventoryOrgSno, using the alias name InventoryOrgSno.
     * @return the value of InventoryOrgSno
     */
    public Integer getInventoryOrgSno() {
        return (Integer) getAttributeInternal(INVENTORYORGSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for InventoryOrgSno.
     * @param value value to set the InventoryOrgSno
     */
    public void setInventoryOrgSno(Integer value) {
        setAttributeInternal(INVENTORYORGSNO, value);
    }

    /**
     * Gets the attribute value for PhoneNo, using the alias name PhoneNo.
     * @return the value of PhoneNo
     */
    public String getPhoneNo() {
        return (String) getAttributeInternal(PHONENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhoneNo.
     * @param value value to set the PhoneNo
     */
    public void setPhoneNo(String value) {
        setAttributeInternal(PHONENO, value);
    }

    /**
     * Gets the attribute value for FaxNo, using the alias name FaxNo.
     * @return the value of FaxNo
     */
    public String getFaxNo() {
        return (String) getAttributeInternal(FAXNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for FaxNo.
     * @param value value to set the FaxNo
     */
    public void setFaxNo(String value) {
        setAttributeInternal(FAXNO, value);
    }

    /**
     * Gets the attribute value for MobileNo, using the alias name MobileNo.
     * @return the value of MobileNo
     */
    public String getMobileNo() {
        return (String) getAttributeInternal(MOBILENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for MobileNo.
     * @param value value to set the MobileNo
     */
    public void setMobileNo(String value) {
        setAttributeInternal(MOBILENO, value);
    }

    /**
     * Gets the attribute value for ContactPerson, using the alias name ContactPerson.
     * @return the value of ContactPerson
     */
    public String getContactPerson() {
        return (String) getAttributeInternal(CONTACTPERSON);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContactPerson.
     * @param value value to set the ContactPerson
     */
    public void setContactPerson(String value) {
        setAttributeInternal(CONTACTPERSON, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Integer getCreatedBy() {
        return (Integer) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Integer value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Integer getLastUpdatedBy() {
        return (Integer) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Integer value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for IsSupervised, using the alias name IsSupervised.
     * @return the value of IsSupervised
     */
    public String getIsSupervised() {
        return (String) getAttributeInternal(ISSUPERVISED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsSupervised.
     * @param value value to set the IsSupervised
     */
    public void setIsSupervised(String value) {
        setAttributeInternal(ISSUPERVISED, value);
    }

    /**
     * Gets the attribute value for SupervisedDate, using the alias name SupervisedDate.
     * @return the value of SupervisedDate
     */
    public Timestamp getSupervisedDate() {
        return (Timestamp) getAttributeInternal(SUPERVISEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupervisedDate.
     * @param value value to set the SupervisedDate
     */
    public void setSupervisedDate(Timestamp value) {
        setAttributeInternal(SUPERVISEDDATE, value);
    }

    /**
     * Gets the attribute value for IsUnsupervised, using the alias name IsUnsupervised.
     * @return the value of IsUnsupervised
     */
    public String getIsUnsupervised() {
        return (String) getAttributeInternal(ISUNSUPERVISED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsUnsupervised.
     * @param value value to set the IsUnsupervised
     */
    public void setIsUnsupervised(String value) {
        setAttributeInternal(ISUNSUPERVISED, value);
    }

    /**
     * Gets the attribute value for UnSupervisedDate, using the alias name UnSupervisedDate.
     * @return the value of UnSupervisedDate
     */
    public Timestamp getUnSupervisedDate() {
        return (Timestamp) getAttributeInternal(UNSUPERVISEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnSupervisedDate.
     * @param value value to set the UnSupervisedDate
     */
    public void setUnSupervisedDate(Timestamp value) {
        setAttributeInternal(UNSUPERVISEDDATE, value);
    }

    /**
     * Gets the attribute value for SupervisedBy, using the alias name SupervisedBy.
     * @return the value of SupervisedBy
     */
    public Integer getSupervisedBy() {
        return (Integer) getAttributeInternal(SUPERVISEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupervisedBy.
     * @param value value to set the SupervisedBy
     */
    public void setSupervisedBy(Integer value) {
        setAttributeInternal(SUPERVISEDBY, value);
    }

    /**
     * Gets the attribute value for UnSupervisedBy, using the alias name UnSupervisedBy.
     * @return the value of UnSupervisedBy
     */
    public Integer getUnSupervisedBy() {
        return (Integer) getAttributeInternal(UNSUPERVISEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnSupervisedBy.
     * @param value value to set the UnSupervisedBy
     */
    public void setUnSupervisedBy(Integer value) {
        setAttributeInternal(UNSUPERVISEDBY, value);
    }

    /**
     * Gets the attribute value for SubinventoryDescription, using the alias name SubinventoryDescription.
     * @return the value of SubinventoryDescription
     */
    public String getSubinventoryDescription() {
        return (String) getAttributeInternal(SUBINVENTORYDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubinventoryDescription.
     * @param value value to set the SubinventoryDescription
     */
    public void setSubinventoryDescription(String value) {
        setAttributeInternal(SUBINVENTORYDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for IsActive, using the alias name IsActive.
     * @return the value of IsActive
     */
    public String getIsActive() {
        return (String) getAttributeInternal(ISACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsActive.
     * @param value value to set the IsActive
     */
    public void setIsActive(String value) {
        setAttributeInternal(ISACTIVE, value);
    }

    /**
     * @return the associated entity InvInventoryOrgImpl.
     */
    public InvInventoryOrgImpl getInvInventoryOrg() {
        return (InvInventoryOrgImpl) getAttributeInternal(INVINVENTORYORG);
    }

    /**
     * Sets <code>value</code> as the associated entity InvInventoryOrgImpl.
     */
    public void setInvInventoryOrg(InvInventoryOrgImpl value) {
        setAttributeInternal(INVINVENTORYORG, value);
    }

    /**
     * @param subinventoryOrgSno key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer subinventoryOrgSno) {
        return new Key(new Object[] { subinventoryOrgSno });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpims.modelims.imseo.InvSubinventoryOrg");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

